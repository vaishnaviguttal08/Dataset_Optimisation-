import pandas as pd
import numpy as np

#Our own localdisk ka path :
file_path = 'C:/Users/A1/vaishnavig/Problem_3_Dataset.xlsx'


try:
  
    source_df = pd.read_excel(file_path, sheet_name='SOURCE')
    destination_df = pd.read_excel(file_path, sheet_name='DESTINATION')
    print("Excel file loaded successfully.")
except FileNotFoundError:
    print(f"The file {file_path} does not exist.")
    exit()
except Exception as e:
    print(f"An error occurred: {e}")
    exit()

# Convert degrees to radians
source_df['Latitude'] = np.radians(source_df['Latitude'])
source_df['Longitude'] = np.radians(source_df['Longitude'])
destination_df['Latitude'] = np.radians(destination_df['Latitude'])
destination_df['Longitude'] = np.radians(destination_df['Longitude'])

# Haversine formula to calculate distance in km
def haversine(lat1, lon1, lat2, lon2):
    dlat = lat2 - lat1
    dlon = lon2 - lon1
    a = np.sin(dlat / 2)**2 + np.cos(lat1) * np.cos(lat2) * np.sin(dlon / 2)**2
    c = 2 * np.arcsin(np.sqrt(a))
    km = 6371 * c
    return km

# Create arrays of source and destination coordinates
source_coords = source_df[['Latitude', 'Longitude']].values
destination_coords = destination_df[['Latitude', 'Longitude']].values

# Initialize an array to store the distances
distances = np.zeros((len(source_coords), len(destination_coords)))

# Compute the distances using the Haversine formula 
for i, (lat1, lon1) in enumerate(source_coords):
    distances[i, :] = haversine(lat1, lon1, destination_coords[:, 0], destination_coords[:, 1])

# Convert distances to DataFrame for  processing or saving
distances_df = pd.DataFrame(distances, index=source_df.index, columns=destination_df.index)

#   distances to a CSV file mei convert krke save kro
distances_df.to_csv('distances.csv', index=True)

print("Distance calculation and saving to CSV complete.")
